// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Do the incremental first so it can be muxed away if not wanted.
    // Then do the load to feed into the reset mux.
    
    
    /*
    Inc16 
    IN in[16];
    OUT out[16];
    */
    // else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
    Inc16(in=regOut, out=incremented);
    Mux16(a=regOut, b=incremented, sel=inc, out=incOut);
    
    
    // else if (load[t] == 1)  out[t+1] = in[t]
    Mux16(a=incOut, b=in, sel=load, out=loadOut);
    
    
    /*
    Mux16 
    IN a[16], b[16], sel;
    OUT out[16];
    */
    // if      (reset[t] == 1) out[t+1] = 0
    Mux16(a=loadOut, b=false, sel=reset, out=resetOut);
    
    
       
    /*
    Register 
    IN in[16], load;
    OUT out[16];
    */
    // Now apply the result to the register
    Register(in=resetOut, load=true, out=regOut, out=out);

}

